% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_parks_osm.R
\name{get_parks_osm}
\alias{get_parks_osm}
\title{Get public parks from OpenStreetMap}
\usage{
get_parks_osm(
  place,
  date = NULL,
  mutually_exclusive_with = NULL,
  snap_tolerance = 5,
  min_area = units::set_units(0, "m^2"),
  aggregate_polygons = 15,
  dir_raw = oe_download_directory(),
  filename = NULL,
  ...
)
}
\arguments{
\item{place}{\code{sf} object (with projected coordinate reference system). Geographical area to match with the (\code{.osm.pbf}) file in the data archive.
Argument passed to \code{osmextract::oe_match()}.}

\item{date}{Date of OSM data snapshot to download. Refer to https://download.geofabrik.de
for the specific dates available. Defaults to \code{NULL} (download the latest available data).}

\item{mutually_exclusive_with}{list of \code{sf} object(s). This may be used to
ensure that polygons (e.g. parks, beaches, informal nature areas) are mutually-exclusive (i.e. non-overlapping).
Remove output polygons \href{https://postgis.net/docs/ST_Contains.html}{contained} within, as well as \href{https://postgis.net/docs/ST_Intersection.html}{intersections} between,
each element of this list. Should have the same coordinate reference system as \code{place}.}

\item{snap_tolerance}{numeric. Argument for \code{tolerance} level passed to \code{sf::st_snap()},
used to rectify nearly coincident edges between polygons before processing (e.g. \code{sf::st_contains()}, \code{sf::st_covers()}).
Provided either as a units object (see \code{units::set_units()}), or a number in the units of the coordinate reference system.
Defaults to \code{5}. Set to \code{0} if you do not wish to rectify minor overlaps.}

\item{min_area}{numeric. Specify minimum area of each polygon to be retained in the output,
passed to argument \code{threshold} in \code{smoothr::drop_crumbs()}.
Provided either as a units object (see \code{units::set_units()}), or a number in the units of
the coordinate reference system. Defaults to \code{0} \eqn{m^2}.}

\item{aggregate_polygons}{numeric. Argument for \code{dist} passed to \code{sf::st_buffer()}.
Buffered polygons that overlap will be aggregated into multipolygons.
Set to \code{NULL} if you do not wish to aggregate to multipolygons.}

\item{dir_raw}{character. Directory to download the raw unprocessed OSM data. Passed to
argument \code{download_directory} in \code{osmextract::oe_read()}.}

\item{filename}{character (optional). File path to export output data (GeoJSON format).}

\item{...}{Other arguments passed to \code{osmextract::oe_read()}.}
}
\value{
The processed park polygons (\code{sf} object).
}
\description{
Download and process OpenStreetMap (OSM) park polygons within a specified geographical \code{place},
from the \href{https://download.geofabrik.de}{Geofabrik database}. It is a wrapper around
functions in the package \href{https://docs.ropensci.org/osmextract/index.html}{\code{osmextract}}, and
processes the downloaded files for subsequent analyses. Refer to package \code{osmextract} for
more details and options for input arguments when downloading the data.
}
\details{
OSM polygons are filtered by key-value attributes, where \verb{leisure:} is \code{park}, \code{garden} or \code{nature_reserve},
and \verb{access:} is not \code{no} or \code{private}, as well as the key-value pair \code{tourism:zoo}.
If \code{mutually_exclusive_with} is provided, \href{https://postgis.net/docs/ST_Intersection.html}{intersections} between
the output and these polygon(s) will be excluded using \code{polygons_mutually_exclude()}.
Polygons are then cleaned up using \code{polygons_clean()}.
}
