% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pop_density_polygonise.R
\name{pop_density_polygonise}
\alias{pop_density_polygonise}
\title{Polygonise population density raster to population count per (building) polygon}
\usage{
pop_density_polygonise(
  input_raster,
  write = TRUE,
  dsn,
  driver = "GeoJSON",
  overwrite = TRUE,
  delete_dsn = TRUE,
  ...
)
}
\arguments{
\item{input_raster}{Population density raster as a SpatRaster object (\code{terra::rast()}).
Output from \code{pop_dasymap()} may be used.}

\item{write}{Whether or not to export the output. Defaults to \code{TRUE}.}

\item{dsn}{Argument passed to \code{sf::st_write()}.}

\item{driver}{character. Argument passed to \code{sf::st_write()}. Defaults to \code{'GeoJSON'}.}

\item{overwrite}{logical. Argument passed to \code{sf::st_write()}. Defaults to \code{TRUE}.}

\item{delete_dsn}{Argument passed to \code{sf::st_write()}. Defaults to \code{TRUE}.}

\item{...}{Other arguments passed to \code{sf::st_write()}.}
}
\value{
Building \code{sf }polygons with column \code{popcount}.
}
\description{
Convert raster of population density (e.g. from \code{pop_dasymap()} output) to population count per polygon
(adjacent polygons with similar pixel values are merged).
Thus, if rasters supplied to \code{pop_dasymap()} are at a spatial resolution small enough to delineate individual buildings,
conversion to polygons using this function would reflect the population count per building.
Input data should have a projected coordinate reference system specific to the target area.
}
\examples{
\dontrun{
population_sgp <- data(singapore)
landuse <- data(landuse_sgp)
buildings <- data(buildings_sgp)

# first, rasterise population, landuse & buildings
pop_rasters <- rasterise_pop(population_sgp)

landuse_rasters <- rasterise_landuse(landuse,
                                     land_use = "lu_desc",
                                     subset = c("1" = "RESIDENTIAL",
                                                "2" = "COMMERCIAL & RESIDENTIAL",
                                                "3" = "RESIDENTIAL WITH COMMERCIAL AT 1ST STOREY",
                                                "4" = "RESIDENTIAL / INSTITUTION"),
                                     sf_pop = population_sgp,
                                     match_landuse_pop = "recent")

buildings_rasters <- rasterise_buildings(buildings,
                                     proxy_pop_density = "levels",
                                     year = "year",
                                     sf_pop = population_sgp,
                                     sf_landuse = landuse,
                                     match_buildings_pop = "closest")

# then perform dasymetric mapping on selected (first) year
popdens_raster <- pop_dasymap(pop_polygons = pop_rasters$pop_polygons[[1]],
                              pop_perblock_count = pop_rasters$pop_count[[1]],
                              pop_perblock_density = pop_rasters$pop_density[[1]],
                              land_relative_density = buildings_rasters[[1]],
                              filename = "buildings_popdensity.tif",
                              wopt = list(gdal=c("COMPRESS=LZW")))

# finally, convert to pop count per building polygons
pop_density_polygonise(input_raster = popdens_raster,
                       write = TRUE,
                       dsn = "buildings_popcount.geojson")
}

}
