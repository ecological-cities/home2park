% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_amenities_osm.R
\name{get_trails_osm}
\alias{get_trails_osm}
\title{Get accessible trails from OpenStreetMap}
\usage{
get_trails_osm(
  place,
  date = NULL,
  dir_raw = osmextract::oe_download_directory(),
  filename = NULL,
  ...
)
}
\arguments{
\item{place}{\code{sf} object (with projected coordinate reference system). Geographical area to match with the (\code{.osm.pbf}) file in the data archive.
Argument passed to \code{osmextract::oe_match()}.}

\item{date}{Date of OSM data snapshot to download. Refer to https://download.geofabrik.de
for the specific dates available. Defaults to \code{NULL} (download the latest available data).}

\item{dir_raw}{character. Directory to download the raw unprocessed OSM data. Passed to
argument \code{download_directory} in \code{osmextract::oe_read()}.}

\item{filename}{character (optional). File path to export output data (GeoJSON format).}

\item{...}{Other arguments passed to \code{osmextract::oe_read()}.}
}
\value{
The processed trail lines (\code{sf} object).
}
\description{
Download and process OpenStreetMap (OSM) accessible trail (lines) within \code{place},
from the \href{https://download.geofabrik.de}{Geofabrik database}. It is a wrapper around
functions in the package \href{https://docs.ropensci.org/osmextract/index.html}{\code{osmextract}}, and
processes the downloaded files for subsequent analyses. Refer to package \code{osmextract} for
more details and options for input arguments when downloading the data.
}
\details{
OSM lines filtered by key-value attributes, where \verb{highway:} is \code{track}, \code{path}, \code{footway} or \code{cycleway}, and \verb{access:} is not \code{no} or \code{private}.
}
\examples{
\dontrun{
data(pop_sgp)
pop_sgp <- sf::st_transform(pop_sgp, sf::st_crs(32648)) # transform to projected crs

# merge all census blocks for chosen year (2020) into single multi-polygon
# function requires that polygons are merged
city_boundaries <- pop_sgp \%>\%
   dplyr::filter(year == 2020) \%>\%
   sf::st_union() \%>\%
   sf::st_as_sf() \%>\%
   smoothr::fill_holes(threshold = units::set_units(1, 'km^2'))  \%>\% # clean up
   smoothr::drop_crumbs(threshold = units::set_units(1, 'km^2'))  \%>\%
   sf::st_make_valid()

# run function
get_trails_osm(place = city_boundaries,
               date = as.Date('2021-01-01'),
               filename = 'accessible-trails_osm-lines_2021-01-01.geojson')
}

}
